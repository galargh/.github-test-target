name: Inspect Releaser Test
on:
  workflow_dispatch:
    inputs:
      artifacts-url:
        description: The artifacts_url of the workflow run to download the release artifact from.
        required: true
  workflow_run:
    workflows: [Releaser]
    types:
      - completed

jobs:
  test:
    if: github.event.inputs.artifacts-url != '' || github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - id: releaser
        uses: protocol/.github/.github/actions/inspect-releaser@inspect-releaser
        with:
          artifacts-url: ${{ github.event.inputs.artifacts-url || github.event.workflow_run.artifacts_url }}
      - if: ${{ steps.releaser.outputs.id == '' }}
        run: echo "The releaser job did not create a new release."
      - if: ${{ steps.releaser.outputs.id != '' }}
        env:
          DRAFT: ${{ steps.releaser.outputs.draft }}
          VERSION: ${{ steps.releaser.outputs.version }}
          URL: ${{ steps.releaser.outputs.url }}
        run: |
          echo 'The releaser job created a new release:'
          echo "  draft: $DRAFT"
          echo "  version: $VERSION"
          echo "  url: $URL"

  tags:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ fromJSON(steps.workflow-run.outputs.artifacts)['release'].files['release.json'].tags || github.event.inputs.tags }}
    steps:
      # This step will download the release artifact either from the workflow
      # run that triggered this workflow or from the artifacts-url input. It
      # will also parse the release.json file.
      - id: workflow-run
        if: github.event.workflow_run.artifacts_url != '' || github.event.inputs.artifacts-url != ''
        uses: pl-strflt/rich-workflow-run@v1
        with:
          artifacts-url: ${{ github.event.workflow_run.artifacts_url || github.event.inputs.artifacts-url }}
          artifact-names: release
  docker:
    needs: [tags]
    if: needs.tags.outputs.tags != ''
    name: Docker
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      # This step will add ghcr.io/<repository> prefix to each <tag>.
      - id: tags
        env:
          REPOSITORY: ${{ github.repository }}
          TAGS: ${{ needs.tags.outputs.tags }}
        run: jq -Rr 'split(",") | map(gsub("^\\s+|\\s+$";"") | "ghcr.io/\(env.REPOSITORY):\(.)") | join(",") | "tags=\(.)"' <<< "$TAGS" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.tags.outputs.tags }}
